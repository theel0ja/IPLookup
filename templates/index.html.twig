{% extends "base.html.twig" %}

{% block stylesheets %}
    <style>
        #map {
            width: 100%;
            height: 30em;
            /* z-index: 0; */
        }
        #menu {
            padding: 10px;
            z-index: 1;

            position: absolute;
            top: 0px;
            left: 0px;
        }
    </style>
{% endblock %}

{% block content %}
    <div class="card">
        <div class="card-body" style="padding: 0px;" id="map-card-body">
            <div id="map"></div>
            <div id="menu" class="btn-group-toggle" data-toggle="buttons">
                <label class="btn btn-primary active" id="streets-btn">
                    <input id="streets" type="radio" name="rtoggle" checked=""> Streets
                </label><label class="btn btn-primary" id="satellite-streets-btn"><!-- TODO: Try to set them to different lines -->
                    <input id='satellite-streets' type='radio' name='rtoggle'> Satellite
                </label>
            </div>
        </div>
    </div>
    
    <div>
        <table class="table">
            <!--<thead>
                <tr>
                <th scope="col">#</th>
                <th scope="col">First Name</th>
                <th scope="col">Last Name</th>
                <th scope="col">Username</th>
                </tr>
            </thead>-->
            <tbody>
                <tr>
                    <th>Hostname</th>
                    <td>{{hostname}}</td>

                    <th>ISP</th>
                    <td>
                        {{isp}} (<a href="https://bgpview.io/asn/{{asn}}">AS{{asn}}</a>)
                    </td>
                </tr>
                <tr>
                    <th>Continent</th>
                    <td>TODO <!-- TODO: Implement this --></td>
                    
                    <th>Flag</th>
                    <td>
                        <a href="https://cdn.rawgit.com/hjnilsson/country-flags/master/svg/{{country|lower}}.svg"><img alt="Flag of {{country}}" src="https://cdn.rawgit.com/hjnilsson/country-flags/master/svg/{{country|lower}}.svg" class="rounded img-fluid"
                        style="max-width: 35px;"/></a>
                    </td>
                </tr>
                <tr>
                    <th>Country</th>
                    <td>{{country}}</td>
                    
                    <th>Country Code</th>
                    <td>{{country}}<!-- (TODO: set ISO 3166-1 alpha-3 here) --></td>
                </tr>
                <tr>
                    <th>Region</th>
                    <td>{{region}}</td>
                    
                    <th>Local time</th>
                    <td>TODO <!-- TODO: Implement this --></td>
                </tr>
                <tr>
                    <th>City</th>
                    <td>{{city}}</td>
                    
                    <th>Latitude</th>
                    <td>{{lat}}</td>
                </tr>
                <tr>
                    <th>IP Address<!-- (IPv4)--></th>
                    <td>{{ip}}</td>
                    
                    <th>Longitude</th>
                    <td>{{lon}}</td>
                </tr>
            </tbody>
        </table>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        var map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/streets-v9',
            center: [{{lon}}, {{lat}}],
            zoom: 9,
        });

        // Add marker to the map.
        var el = document.createElement('div');
        el.className = 'marker';

        new mapboxgl.Marker()
        .setLngLat([{{lon}}, {{lat}}])
        .addTo(map);
     
        // Add zoom and rotation controls to the map.
        map.addControl(new mapboxgl.NavigationControl());

        // Layer switcher

        var layerList = document.getElementById('menu');
        var inputs = layerList.getElementsByTagName('input');

        function switchLayer(layer) {
            var layerId = layer.target.id;
            map.setStyle('mapbox://styles/mapbox/' + layerId + '-v9');

            if(layerId == "satellite-streets") {
                // Remove active from Streets
                $( "#menu #streets-btn" ).removeClass("active");
                $( "#menu #satellite-streets-btn" ).addClass("active");
            } else if(layerId == "streets") {
                // Remove active class from Satellite Streets
                $( "#menu #satellite-streets-btn" ).removeClass("active");
                $( "#menu #streets-btn" ).addClass("active");
            } else {
                throw "Error: Unknown layer";
            }
        }

        for (var i = 0; i < inputs.length; i++) {
            inputs[i].onclick = switchLayer;
        }

        // Hide map rotation on mapboxgl.NavigationControl

        // disable map rotation using right click + drag
        map.dragRotate.disable();

        // disable map rotation using touch rotation gesture
        map.touchZoomRotate.disableRotation();
    </script>
    <style>
        /* hide map rotation on mapboxgl.NavigationControl */
        /* https://github.com/mapbox/mapbox-gl-js/issues/1929#issuecomment-175108317 */
        .mapboxgl-ctrl-compass {
            display: none !important;
        }
    </style>
{% endblock %}